/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cs349.a3;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.LinkedList;

/**
 *
 * @author sandy
 */
public class Canvas extends javax.swing.JPanel {
    public enum Mode {
        DRAW, SELECT
    }
    
    public LinkedList<Doodle> doodles = new LinkedList<Doodle>();
    public Doodle activeDoodle;
    public Mode mode = Mode.DRAW;
    int startX, startY, lastX, lastY;
    
    Color white = new Color(0xFFFFFF);
    Color black = new Color(0);
    BasicStroke selectStroke = new BasicStroke(1.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 1.0f, new float[] { 8.0f, 3.0f, 2.0f, 3.0f }, 0.0f);
            
    /**
     * Creates new form Canvas
     */
    public Canvas() {
        initComponents();
    }
    
    public void setMode(Mode m) {
        mode = m;
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.setColor(white);
        g.fillRect(0, 0, getWidth(), getHeight());
        
        for (Doodle doodle : doodles) {
            doodle.paint(g);
        }
        
        if (mode == Mode.SELECT) {
            g.setColor(black);
            ((Graphics2D)g).setStroke(selectStroke);
            
            int x0 = Math.min(startX, lastX), x1 = Math.max(startX, lastX);
            int y0 = Math.min(startY, lastY), y1 = Math.max(startY, lastY);
            
            g.drawRect(x0, y0, x1 - x0, y1 - y0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        System.out.println(evt.getClickCount());
    }//GEN-LAST:event_formMouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        if (mode == Mode.DRAW) {
            activeDoodle.append(new Line(0, startX, startY, evt.getX(), evt.getY()));
            startX = evt.getX();
            startY = evt.getY();
        } else if (mode == Mode.SELECT) {
            lastX = evt.getX();
            lastY = evt.getY();
        }
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        startX = evt.getX();
        startY = evt.getY();
        
        if (mode == Mode.DRAW) {
            activeDoodle = new Doodle();
            doodles.add(activeDoodle);
        }
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        if (mode == Mode.SELECT) {
           
            lastX = evt.getX();
            lastY = evt.getY();
            
            
            startX = startY = lastX = lastY = 0;
            
            repaint();
        }
    }//GEN-LAST:event_formMouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
